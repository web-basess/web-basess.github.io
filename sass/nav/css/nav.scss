//1.定义变量
$color: #fff !default;
$bgColor: #34495e !default;
$sfbgColor: #e74c3c !default;
$fontSize: 14px !default;
$fontFamily: Arial, Helvetica !default;
$width: 462px !default;
//2.clear
%clearfix {
  &{
    *zoom: 1;
  }
  &:before,
  &:after{
    content: "";
    display: table;
  }
  &:after {
    clear: both;
    overflow: hidden;
  }
}

%listStyle {
  margin: 0;
  padding: 0;
  list-style: none outside none;
}

$prefix-for-webkit: true !default;
$prefix-for-mozilla: true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera: true !default;
$prefix-for-spec: true !default;
//Private Browser
@mixin prefixer ($property, $value, $prefixes) {
  @each $prefix in $prefixes {

    @if $prefix == webkit and $prefix-for-webkit == true {
      -webkit-#{$property}: $value;
    }
    @else if $prefix == moz and $prefix-for-mozilla == true {
      -moz-#{$property}: $value;
    }
    @else if $prefix == ms and $prefix-for-microsoft == true {
      -ms-#{$property}: $value;
    }
    @else if $prefix == o and $prefix-for-opera == true {
      -o-#{$property}: $value;
    }
    @else if $prefix == spec and $prefix-for-spec == true {
      #{$property}: $value;
    }
    @else {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}
//5.定义transform

//示例: @include prefixer(border-radius, $radius, webkit spec);
//Transform, transform-origin, transform-style
//----------------------------------------
@mixin transform($property...) {
  @include prefixer(transform, $property, webkit moz o ms spec);
}

@mixin transform-origin($axes: 50%) {
  // x-axis - left | center | right  | length | %
  // y-axis - top  | center | bottom | length | %
  // z-axis -                          length
  @include prefixer(transform-origin, $axes, webkit moz o ms spec);
}

@mixin skewX($degrees) {
  @include prefixer(transform, skewX($degrees), webkit moz o ms spec);
  -webkit-backface-visibility: hidden;
}

//6.定义transition

// Return vendor-prefixed property names if appropriate
// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background
//----------------------------------------

@function transition-property-names($props, $vendor: false) {
  $new-props: ();
  @each $prop in $props {
    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);
  }
  @return $new-props;
}

@function transition-property-name($prop, $vendor: false) {
  // put other properties that need to be prefixed here aswell
  @if $vendor and $prop == transform {
    @return unquote('-'+$vendor+'-'+$prop);
  }
  @else {
    @return $prop;
  }
}

// transition
//----------------------------------------
@mixin transition ($properties...) {
  @if length($properties) >= 1 {
    @include prefixer(transition, $properties, webkit moz o ms spec);
  }

  @else {
    $properties: all 0.15s ease-out 0;
    @include prefixer(transition, $properties, webkit moz o ms spec);
  }
}
//7.定义fit-content
@mixin fit-content {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: -o-fit-content;
  width: -ms-fit-content;
  width: fit-content;
}
//8.设置box-shadow

// box-shadow
@mixin box-shadow($shadow...) {
  @include prefixer(box-shadow, $shadow, webkit spec);
}

//9.设置文本
%typography {
  color: $color;
  text: {
    decoration: none;
    align: center;
  }
  font: {
    family: $fontFamily;
    size: $fontSize;
  }
}


.menu {
  width: $width;
  @extend %clearfix;
  @extend %listStyle;
  @include fit-content;
  margin: 50px auto;
}

.drop-menu {
  @extend %listStyle;
}

.menu > li {
  background: $bgColor;
  float: left;
  position: relative;
  @include skewX(25deg);
}

.menu a {
  display: block;
  @extend %typography;
}

.menu li:hover {
  background: $sfbgColor;
}

.menu > li > a {
  padding: 1em 2em;
  @include skewX(-25deg);
}

/*Dropdown menu*/
.drop-menu {
  position: absolute;
  width: $width / 4;
  left: 50%;
  margin-left: -($width / 8);
  opacity: 0;
  visibility: hidden;
  @include skewX(-25deg);
  @include transform-origin(left top);

  li {
    background-color: $bgColor;
    position: relative;
    overflow: hidden;
    opacity: 0;
    visibility: hidden;
    @include transition(all .2s ease );

    a {
      padding: 1em 2em;
    }

    &::after {
      content: "";
      position: absolute;
      top: -125%;
      height: 100%;
      width: 100%;
      @include box-shadow(0 0 50px rgba(0,0,0,.9));
    }

    &:nth-child(odd) {
      @include transform(skewX(-25deg) translateX(0));

      a {
        @include skewX(25deg);
      }

      &::after {
        right: -50%;
        @include transform(skewX(-25deg) rotate(3deg));
      }
    }

    &:nth-child(even){
      @include transform(skewX(25deg) translateX(0));

      a {
        @include skewX(-25deg);
      }

      &::after {
        left: -50%;
        @include transform(skewX(25deg) rotate(3deg));
      }
    }
  }
}

.menu > li:hover .drop-menu,
.menu > li:hover .drop-menu li {
  opacity: 1;
  visibility: visible;
}

.menu > li:hover .drop-menu li:nth-child(even){
  @include transform(skewX(25deg) translateX(15px));
}
.menu > li:hover .drop-menu li:nth-child(odd){
  @include transform(skewX(-25deg) translateX(-15px));
}